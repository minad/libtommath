#Makefile for GCC
#
#Tom St Denis

#default files to install
ifndef LIBNAME
   LIBNAME=libtommath.la
endif

include makefile_include.mk


ifndef LIBTOOL
  ifeq ($(PLATFORM), Darwin)
    LIBTOOL:=glibtool
  else
    LIBTOOL:=libtool
  endif
endif
LTCOMPILE = $(LIBTOOL) --mode=compile --tag=CC $(CC)
LTLINK = $(LIBTOOL) --mode=link --tag=CC $(CC)

LCOV_ARGS=--directory .libs --directory .

#START_INS
OBJECTS=mp_2expt.o mp_abs.o mp_add.o mp_add_d.o mp_addmod.o mp_and.o mp_clamp.o mp_clear.o mp_clear_multi.o \
mp_cmp.o mp_cmp_d.o mp_cmp_mag.o mp_cnt_lsb.o mp_complement.o mp_copy.o mp_count_bits.o mp_cutoffs.o \
mp_decr.o mp_deprecated.o mp_div.o mp_div_2.o mp_div_2d.o mp_div_3.o mp_div_d.o mp_dr_is_modulus.o \
mp_dr_reduce.o mp_dr_setup.o mp_error_to_string.o mp_exch.o mp_export.o mp_expt_d.o mp_expt_d_ex.o \
mp_exptmod.o mp_exteuclid.o mp_fread.o mp_fwrite.o mp_gcd.o mp_get_double.o mp_get_int.o mp_get_long.o \
mp_get_long_long.o mp_grow.o mp_ilogb.o mp_import.o mp_incr.o mp_init.o mp_init_copy.o mp_init_multi.o \
mp_init_set.o mp_init_set_int.o mp_init_size.o mp_invmod.o mp_is_square.o mp_iseven.o mp_isodd.o \
mp_kronecker.o mp_lcm.o mp_lshd.o mp_mod.o mp_mod_2d.o mp_mod_d.o mp_montgomery_calc_normalization.o \
mp_montgomery_reduce.o mp_montgomery_setup.o mp_mul.o mp_mul_2.o mp_mul_2d.o mp_mul_d.o mp_mulmod.o \
mp_n_root.o mp_n_root_ex.o mp_neg.o mp_or.o mp_prime_fermat.o mp_prime_frobenius_underwood.o \
mp_prime_is_divisible.o mp_prime_is_prime.o mp_prime_miller_rabin.o mp_prime_next_prime.o \
mp_prime_rabin_miller_trials.o mp_prime_rand.o mp_prime_strong_lucas_selfridge.o mp_prime_tab.o \
mp_radix_size.o mp_radix_smap.o mp_rand.o mp_read_radix.o mp_read_signed_bin.o mp_read_unsigned_bin.o \
mp_reduce.o mp_reduce_2k.o mp_reduce_2k_l.o mp_reduce_2k_setup.o mp_reduce_2k_setup_l.o mp_reduce_is_2k.o \
mp_reduce_is_2k_l.o mp_reduce_setup.o mp_rshd.o mp_set.o mp_set_double.o mp_set_int.o mp_set_long.o \
mp_set_long_long.o mp_shrink.o mp_signed_bin_size.o mp_sqr.o mp_sqrmod.o mp_sqrt.o mp_sqrtmod_prime.o \
mp_sub.o mp_sub_d.o mp_submod.o mp_tc_and.o mp_tc_div_2d.o mp_tc_or.o mp_tc_xor.o mp_to_signed_bin.o \
mp_to_signed_bin_n.o mp_to_unsigned_bin.o mp_to_unsigned_bin_n.o mp_toradix.o mp_toradix_n.o \
mp_unsigned_bin_size.o mp_xor.o mp_zero.o s_mp_add.o s_mp_balance_mul.o s_mp_exptmod.o s_mp_exptmod_fast.o \
s_mp_get_bit.o s_mp_invmod_fast.o s_mp_invmod_slow.o s_mp_karatsuba_mul.o s_mp_karatsuba_sqr.o \
s_mp_montgomery_reduce_fast.o s_mp_mul_digs.o s_mp_mul_digs_fast.o s_mp_mul_high_digs.o \
s_mp_mul_high_digs_fast.o s_mp_rand_jenkins.o s_mp_rand_platform.o s_mp_reverse.o s_mp_sqr.o \
s_mp_sqr_fast.o s_mp_sub.o s_mp_toom_mul.o s_mp_toom_sqr.o

#END_INS

objs: $(OBJECTS)

.c.o:
	$(LTCOMPILE) $(CFLAGS) $(LDFLAGS) -o $@ -c $<

LOBJECTS = $(OBJECTS:.o=.lo)

$(LIBNAME):  $(OBJECTS)
	$(LTLINK) $(LDFLAGS) $(LOBJECTS) -o $(LIBNAME) -rpath $(LIBPATH) -version-info $(VERSION_SO) $(LIBTOOLFLAGS)

install: $(LIBNAME)
	install -d $(DESTDIR)$(LIBPATH)
	install -d $(DESTDIR)$(INCPATH)
	$(LIBTOOL) --mode=install install -m 644 $(LIBNAME) $(DESTDIR)$(LIBPATH)/$(LIBNAME)
	install -m 644 $(HEADERS_PUB) $(DESTDIR)$(INCPATH)
	sed -e 's,^prefix=.*,prefix=$(PREFIX),' -e 's,^Version:.*,Version: $(VERSION_PC),' libtommath.pc.in > libtommath.pc
	install -d $(DESTDIR)$(LIBPATH)/pkgconfig
	install -m 644 libtommath.pc $(DESTDIR)$(LIBPATH)/pkgconfig/

uninstall:
	$(LIBTOOL) --mode=uninstall rm $(DESTDIR)$(LIBPATH)/$(LIBNAME)
	rm $(HEADERS_PUB:%=$(DESTDIR)$(INCPATH)/%)
	rm $(DESTDIR)$(LIBPATH)/pkgconfig/libtommath.pc

test: $(LIBNAME)
	$(LTCOMPILE) $(CFLAGS) -c demo/main.c -o demo/main.o
	$(LTCOMPILE) $(CFLAGS) -c demo/opponent.c -o demo/opponent.o
	$(LTCOMPILE) $(CFLAGS) -c demo/test.c -o demo/test.o
	$(LTLINK) $(LDFLAGS) -o test demo/main.o demo/opponent.o demo/test.o $(LIBNAME)

test_standalone: $(LIBNAME)
	$(LTCOMPILE) $(CFLAGS) -c demo/main.c -o demo/main.o
	$(LTCOMPILE) $(CFLAGS) -c demo/opponent.c -o demo/opponent.o
	$(LTCOMPILE) $(CFLAGS) -c demo/test.c -o demo/test.o
	$(LTLINK) $(LDFLAGS) -o test demo/main.o demo/opponent.o demo/test.o $(LIBNAME)

.PHONY: mtest
mtest:
	cd mtest ; $(CC) $(CFLAGS) -O0 mtest.c $(LDFLAGS) -o mtest

timing: $(LIBNAME) demo/timing.c
	$(LTLINK) $(CFLAGS) $(LDFLAGS) -DTIMER demo/timing.c $(LIBNAME) -o timing

tune: $(LIBNAME)
	$(LTCOMPILE) $(CFLAGS) -c etc/tune.c -o etc/tune.o
	$(LTLINK) $(LDFLAGS) -o etc/tune etc/tune.o $(LIBNAME)
	cd etc/; /bin/sh tune_it.sh; cd ..
	$(MAKE) -f makefile.shared




